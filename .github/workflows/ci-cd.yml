name: CI/CD para Django

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pytest-django pytest-cov selenium

      - name: Aplicar migraciones
        run: python manage.py migrate

      - name: Ejecutar pruebas unitarias
        run: pytest --maxfail=5 --disable-warnings -v crud_user/tests/test_unitarias.py

      - name: Ejecutar pruebas de integración
        run: pytest --maxfail=5 --disable-warnings -v crud_user/tests/test_integracion.py

      - name: Configurar Chrome para pruebas UI
        uses: browser-actions/setup-chrome@latest

      - name: Ejecutar pruebas funcionales/UI
        run: pytest --maxfail=5 --disable-warnings -v crud_user/tests/test_funcionales.py

      - name: Generar reporte de cobertura
        run: pytest --cov=crud_user --cov-report=xml

      - name: Subir resultados de pruebas
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            coverage.xml
            pytest-report.xml

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v4

      - name: Verificar Secrets
        run: |
          echo "Verificando usuario de Docker: ${{ secrets.DOCKERUSERNAME }}"
          if [ -z "${{ secrets.DOCKERPASSWORD }}" ]; then echo "⚠️ DOCKERPASSWORD está vacío"; exit 1; fi
          if [ -z "${{ secrets.DOCKERUSERNAME }}" ]; then echo "⚠️ DOCKERUSERNAME está vacío"; exit 1; fi

      - name: Iniciar sesión en Docker Hub
        run: echo "${{ secrets.DOCKERPASSWORD }}" | docker login -u "${{ secrets.DOCKERUSERNAME }}" --password-stdin

      - name: Construir imagen Docker
        run: docker build -t ${{ secrets.DOCKERUSERNAME }}/web_user_django:latest .

      - name: Subir imagen a Docker Hub
        run: docker push ${{ secrets.DOCKERUSERNAME }}/web_user_django:latest

      - name: Desplegar aplicación
        run: |
          echo "Desplegando la aplicación..."
          
